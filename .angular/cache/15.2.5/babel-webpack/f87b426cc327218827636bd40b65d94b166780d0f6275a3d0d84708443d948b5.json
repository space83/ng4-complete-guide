{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Ingredient } from '../../shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"nameInput\"];\nconst _c1 = [\"amountInput\"];\nexport class ShoppingEditComponent {\n  constructor() {\n    this.ingredientAdded = new EventEmitter();\n  }\n  ngOnInit() {}\n  onAddItem() {\n    const ingName = this.nameInputRef.nativeElement.value;\n    const ingAmount = this.amountInputRef.nativeElement.value;\n    const newIngredient = new Ingredient(ingName, ingAmount);\n    this.ingredientAdded.emit(newIngredient);\n  }\n}\nShoppingEditComponent.ɵfac = function ShoppingEditComponent_Factory(t) {\n  return new (t || ShoppingEditComponent)();\n};\nShoppingEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShoppingEditComponent,\n  selectors: [[\"app-shopping-edit\"]],\n  viewQuery: function ShoppingEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nameInputRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.amountInputRef = _t.first);\n    }\n  },\n  outputs: {\n    ingredientAdded: \"ingredientAdded\"\n  },\n  decls: 22,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [1, \"col-sm-5\", \"form=group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\"], [\"nameInput\", \"\"], [1, \"col-sm-2\", \"form=group\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", 1, \"form-control\"], [\"amountInput\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function ShoppingEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\")(3, \"div\", 0)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8, 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 0)(15, \"div\", 1)(16, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_16_listener() {\n        return ctx.onAddItem();\n      });\n      i0.ɵɵtext(17, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \"Delete\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21, \"Clear\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAKEA,YAAY,QAEP,eAAe;AAEtB,SAASC,UAAU,QAAQ,+BAA+B;;;;;AAO1D,OAAM,MAAOC,qBAAqB;EAKhCC;IAFU,oBAAe,GAAG,IAAIH,YAAY,EAAc;EAE3C;EAEfI,QAAQ,IAER;EAEAC,SAAS;IACP,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACC,aAAa,CAACC,KAAK;IACrD,MAAMC,SAAS,GAAG,IAAI,CAACC,cAAc,CAACH,aAAa,CAACC,KAAK;IACzD,MAAMG,aAAa,GAAG,IAAIX,UAAU,CAACK,OAAO,EAAEI,SAAS,CAAC;IACxD,IAAI,CAACG,eAAe,CAACC,IAAI,CAACF,aAAa,CAAC;EAC1C;;AAhBWV,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAa;EAAAC;IAAA;;;;;;;;;;;;;;;;;;MChBlCC,8BAAiB;MAKqBA,oBAAI;MAAAA,iBAAQ;MAC9BA,8BAIW;MACfA,iBAAM;MACNA,8BAAiC;MACTA,uBAAM;MAAAA,iBAAQ;MAClCA,+BAIa;MACjBA,iBAAM;MAGVA,+BAAiB;MAEqCA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,oBAAG;MAAAA,iBAAS;MAChFA,mCAA6C;MAAAA,uBAAM;MAAAA,iBAAS;MAC5DA,mCAA8C;MAAAA,sBAAK;MAAAA,iBAAS","names":["EventEmitter","Ingredient","ShoppingEditComponent","constructor","ngOnInit","onAddItem","ingName","nameInputRef","nativeElement","value","ingAmount","amountInputRef","newIngredient","ingredientAdded","emit","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["D:\\development\\teaching\\udemy\\ng4-complete-guide\\src\\app\\shopping-list\\shopping-edit\\shopping-edit.component.ts","D:\\development\\teaching\\udemy\\ng4-complete-guide\\src\\app\\shopping-list\\shopping-edit\\shopping-edit.component.html"],"sourcesContent":["import { \n  Component, \n  OnInit, \n  ElementRef, \n  ViewChild, \n  EventEmitter, \n  Output \n} from '@angular/core';\n\nimport { Ingredient } from '../../shared/ingredient.model';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit {\n  @ViewChild('nameInput', { static: false } ) nameInputRef: ElementRef;\n  @ViewChild('amountInput', { static: false } ) amountInputRef: ElementRef;\n  @Output() ingredientAdded = new EventEmitter<Ingredient>();\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n    \n  onAddItem() {\n    const ingName = this.nameInputRef.nativeElement.value;\n    const ingAmount = this.amountInputRef.nativeElement.value;\n    const newIngredient = new Ingredient(ingName, ingAmount);\n    this.ingredientAdded.emit(newIngredient);\n  }\n}\n","<div class=\"row\">\r\n\t<div class=\"col-xs-12\">\r\n        <form>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-5 form=group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    id=\"name\" \r\n                    class=\"form-control\"\r\n                    #nameInput>                    \r\n                </div>\r\n                <div class=\"col-sm-2 form=group\">\r\n                    <label for=\"amount\">Amount</label>\r\n                    <input \r\n                    type=\"number\" \r\n                    id=\"amount\" \r\n                    class=\"form-control\"\r\n                    #amountInput>                    \r\n                </div>\r\n            </div>\r\n      \r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <button class=\"btn btn-success\" type=\"submit\" (click)=\"onAddItem()\">Add</button>\r\n                    <button class=\"btn btn-danger\" type=\"button\">Delete</button>\r\n                    <button class=\"btn btn-primary\" type=\"button\">Clear</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\t</div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}